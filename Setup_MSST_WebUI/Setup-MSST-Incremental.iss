; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "MSST WebUI"
#define MyAppVersion "1.7 preview.2"
#define MyAppExeName "webui.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{0CD11C67-C353-43B2-B901-1197E9AE46E8}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=D:\Windows\Desktop\temp
OutputBaseFilename=Setup_MSST_WebUI_{#MyAppVersion}_Incremental
Compression=lzma
SolidCompression=yes
WizardStyle=modern                         
ArchitecturesInstallIn64BitMode=x64 ia64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "E:\vs\MSST-WebUI-Incremental\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "E:\vs\MSST-WebUI-Incremental\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
procedure AferSetup();
var
  ModelNames: array of string;
  ModelFolder: string;
  SourcePath, DestPath: string;
  I: Integer;
  VocalModelSource, VocalModelDest: string;
  DeletePaths: array of string;
  j: Integer;
  FullPath: string;

begin
  ModelFolder := ExpandConstant('{app}\pretrain\');
  ModelNames := [
    'denoise_mel_band_roformer_aufr33_aggr_sdr_27.9768.ckpt', 
    'denoise_mel_band_roformer_aufr33_sdr_27.9959.ckpt', 
    'deverb_bs_roformer_8_256dim_8depth.ckpt', 
    'deverb_bs_roformer_8_384dim_10depth.ckpt', 
    'deverb_mel_band_roformer_ep_27_sdr_10.4567.ckpt'
  ];

  for I := 0 to GetArrayLength(ModelNames) - 1 do
  begin
    SourcePath := ModelFolder + 'vocal_models\' + ModelNames[I];
    DestPath := ModelFolder + 'single_stem_models\' + ModelNames[I];
    
    if FileExists(SourcePath) then
    begin
      if not DirExists(ModelFolder + 'single_stem_models') then
      begin
        CreateDir(ModelFolder + 'single_stem_models');
      end;
      FileCopy(SourcePath, DestPath, False);
      DeleteFile(SourcePath);
    end;
  end;

  VocalModelSource := ModelFolder + 'vocal_models\model_vocals_mel_band_roformer_kj_sdr_10.98.ckpt';
  VocalModelDest := ModelFolder + 'vocal_models\Kim_MelBandRoformer.ckpt';

  if FileExists(VocalModelSource) then
  begin
    RenameFile(VocalModelSource, VocalModelDest);
  end;

  DeletePaths := [
    'models',
    'backup',
    'cache',
    'tmpdir', 
    'tools\webUI_for_clouds',
    'data_backup\preset_data.json', 
    'data\preset_data.json',
    'tools\themes\theme_schema@1.2.2.json',
    'dataset.py',
    'ensemble.py',
    'msst_inference.py',
    'uvr_inference.py',
    'train.py',
    'train_accelerate.py',
    'utils.py',
    'valid.py'
  ];

  for j := 0 to GetArrayLength(DeletePaths) - 1 do
  begin
    FullPath := ExpandConstant('{app}') + '\' + DeletePaths[j];
    if DirExists(FullPath) then
    begin
      DelTree(FullPath, True, True, True);
    end
    else if FileExists(FullPath) then
    begin
      DeleteFile(FullPath);
    end;
  end;

end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    AferSetup();
  end;
end;